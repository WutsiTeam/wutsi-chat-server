openapi: "3.0.0"
info:
  title: "Wutsi Chat API"
  description: API for chat
  version: "1.0.0"

servers:
  - url: https://wutsi-chat-server-test.herokuapp.com
    description: Sandbox
  - url: https://wutsi-chat-server-prod.herokuapp.com
    description: Production

paths:
  /v1/messages:
    post:
      operationId: "send-message"
      summary: "Send message"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendMessageResponse'
      security:
        - api_key: [ 'chat-manage' ]
      tags:
        - Chat

  /v1/messages/search:
    post:
      operationId: "search-messages"
      summary: "Search messages"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchMessageRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchMessageResponse'
      security:
        - api_key: [ 'chat-read' ]
      tags:
        - Chat

  /v1/conversations/search:
    post:
      operationId: "search-conversations"
      summary: "Search the current user conversations"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchConversationRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchConversationResponse'
      security:
        - api_key: [ 'chat-read' ]
      tags:
        - Chat

components:
  securitySchemes:
    api_key:
      type: apiKey
      in: header
      name: Authorization

  schemas:
    SendMessageRequest:
      type: object
      properties:
        conversationId:
          type: string
          format: uuid
        referenceId:
          type: string
          format: uuid
        recipientId:
          type: integer
          format: int64
        text:
          type: string
        timestamp:
          type: integer
          format: int64
      required:
        - text
        - referenceId
        - conversationId

    SendMessageResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64


    SearchMessageRequest:
      type: object
      properties:
        conversationId:
          type: string
          format: uuid
          nullable: true
        accountId1:
          type: integer
          format: int64
          nullable: true
        accountId2:
          type: integer
          format: int64
          nullable: true
        limit:
          type: integer
          default: 50
        offset:
          type: integer
          default: 0

    SearchMessageResponse:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"

    Message:
      type: object
      properties:
        id:
          type: integer
          format: int64
        referenceId:
          type: string
          format: uuid
        conversationId:
          type: string
          format: uuid
        senderId:
          type: integer
          format: int64
        recipientId:
          type: integer
          format: int64
        text:
          type: string
        timestamp:
          type: integer
          format: int64
        created:
          type: string
          format: date-time
        deviceId:
          type: string
          nullable: true
        received:
          type: string
          format: date-time
          nullable: true

    SearchConversationRequest:
      type: object
      properties:
        accountId:
          type: integer
          format: int64
          nullable: true
        limit:
          type: integer
          default: 50
        offset:
          type: integer
          default: 0

    SearchConversationResponse:
      type: object
      properties:
        conversations:
          type: array
          items:
            $ref: "#/components/schemas/Conversation"

    Conversation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        lastMessage:
          type: object
          $ref: "#/components/schemas/Message"
